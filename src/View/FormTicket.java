/*
 * To change this license header, choose License Hears in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.Controller;
import java.awt.GridLayout;
import javax.swing.*;
import java.util.ArrayList;


/**
 *
 * @author Elkin David Valencia 
 */
public final class FormTicket extends javax.swing.JFrame {

    private Controller controller;
        
    /**
     * Creates new form FormTicket
     */
    public FormTicket() {
        initComponents();
        bGType.add(jRBRoundTrip);
        bGType.add(jRBOneWay);
    }
    
    public void setController(Controller controller) {
        this.controller = controller;
    }
    
    public void setCurrentDate(){
        ArrayList<Integer> currentDate;
        currentDate = controller.getCurrentDate();
        int day = currentDate.get(0);
        int month = currentDate.get(1);
        int year = currentDate.get(2);
        int hour = currentDate.get(3);
        int minute = currentDate.get(4);
        jSDepartureDay.setModel(new SpinnerNumberModel(day,day,31,1));
        jSDepartureMonth.setModel(new SpinnerNumberModel(month,month,12,1));
        jSDepartureYear.setModel(new SpinnerNumberModel(year,year,2099,1));
        jSDepartureTime.setModel(new SpinnerNumberModel(hour,hour,23,1));
        jSDepartureMinute.setModel(new SpinnerNumberModel(minute,minute,59,5));
        jSReturnDay.setModel(new SpinnerNumberModel(day,day,31,1));
        jSReturnMonth.setModel(new SpinnerNumberModel(month,month,12,1));
        jSReturnYear.setModel(new SpinnerNumberModel(year,year,2099,1));
        jSReturnTime.setModel(new SpinnerNumberModel(hour,hour,23,1));
        jSReturnMinute.setModel(new SpinnerNumberModel(minute,minute,59,5));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bGType = new javax.swing.ButtonGroup();
        myPanel = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLTitle = new javax.swing.JLabel();
        jRBRoundTrip = new javax.swing.JRadioButton();
        jRBOneWay = new javax.swing.JRadioButton();
        jLType = new javax.swing.JLabel();
        jLFrom = new javax.swing.JLabel();
        jLTo = new javax.swing.JLabel();
        jLSubTitle = new javax.swing.JLabel();
        jCBFrom = new javax.swing.JComboBox<>();
        jLSubTitle1 = new javax.swing.JLabel();
        jLDepartureDate = new javax.swing.JLabel();
        jLReturnDate = new javax.swing.JLabel();
        jSReturnMinute = new javax.swing.JSpinner();
        jSDepartureDay = new javax.swing.JSpinner();
        jLDay = new javax.swing.JLabel();
        jLMonth = new javax.swing.JLabel();
        jSDepartureMonth = new javax.swing.JSpinner();
        jLYear = new javax.swing.JLabel();
        jSDepartureYear = new javax.swing.JSpinner();
        jSReturnDay = new javax.swing.JSpinner();
        jSReturnMonth = new javax.swing.JSpinner();
        jSReturnYear = new javax.swing.JSpinner();
        jSReturnTime = new javax.swing.JSpinner();
        jLHour = new javax.swing.JLabel();
        jLMinutes = new javax.swing.JLabel();
        jSDepartureTime = new javax.swing.JSpinner();
        jSDepartureMinute = new javax.swing.JSpinner();
        jLSubTitle2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jLPassengers = new javax.swing.JLabel();
        jLAdults = new javax.swing.JLabel();
        jLChildren = new javax.swing.JLabel();
        jSAdults = new javax.swing.JSpinner();
        jSChildren = new javax.swing.JSpinner();
        jSeparator5 = new javax.swing.JSeparator();
        jFTFTotal = new javax.swing.JFormattedTextField();
        jLPassengers1 = new javax.swing.JLabel();
        jBPassengers = new javax.swing.JButton();
        jCBTo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Empresa de transporte");
        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(java.awt.Color.white);
        setName("frame"); // NOI18N
        setResizable(false);

        myPanel.setBackground(new java.awt.Color(255, 255, 255));
        myPanel.setForeground(new java.awt.Color(255, 255, 255));
        myPanel.setName("myPanel"); // NOI18N

        jSeparator1.setForeground(new java.awt.Color(255, 51, 0));

        jLTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLTitle.setText("Generador de tiquetes");

        jRBRoundTrip.setBackground(new java.awt.Color(255, 255, 255));
        jRBRoundTrip.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRBRoundTrip.setSelected(true);
        jRBRoundTrip.setText("Ida y vuelta");
        jRBRoundTrip.setToolTipText("");
        jRBRoundTrip.setActionCommand("1");
        jRBRoundTrip.setAlignmentX(0.5F);
        jRBRoundTrip.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jRBRoundTrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBRoundTripActionPerformed(evt);
            }
        });

        jRBOneWay.setBackground(new java.awt.Color(255, 255, 255));
        jRBOneWay.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRBOneWay.setText("Solo ida");
        jRBOneWay.setToolTipText("");
        jRBOneWay.setActionCommand("2");
        jRBOneWay.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jRBOneWay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBOneWayActionPerformed(evt);
            }
        });

        jLType.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLType.setText("Tipo de tiquete");

        jLFrom.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLFrom.setText("Desde");

        jLTo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLTo.setText("Hacia");

        jLSubTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLSubTitle.setText("¿A dondé viajas?");

        jCBFrom.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jCBFrom.setMaximumRowCount(6);
        jCBFrom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cali", "Manizales", "Bogota" }));
        jCBFrom.setMinimumSize(new java.awt.Dimension(125, 25));
        jCBFrom.setPreferredSize(new java.awt.Dimension(125, 25));
        jCBFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBFromActionPerformed(evt);
            }
        });

        jLSubTitle1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLSubTitle1.setText("¿Cuando viajas?");

        jLDepartureDate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLDepartureDate.setText("Fecha ida");

        jLReturnDate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLReturnDate.setText("Fecha regreso");

        jSReturnMinute.setMinimumSize(new java.awt.Dimension(60, 33));
        jSReturnMinute.setPreferredSize(new java.awt.Dimension(60, 33));

        jSDepartureDay.setMinimumSize(new java.awt.Dimension(60, 33));
        jSDepartureDay.setName(""); // NOI18N
        jSDepartureDay.setOpaque(false);
        jSDepartureDay.setPreferredSize(new java.awt.Dimension(60, 33));

        jLDay.setText("Dia");

        jLMonth.setText("Mes");

        jSDepartureMonth.setMinimumSize(new java.awt.Dimension(60, 33));
        jSDepartureMonth.setPreferredSize(new java.awt.Dimension(60, 33));

        jLYear.setText("Año");

        jSDepartureYear.setMinimumSize(new java.awt.Dimension(80, 33));
        jSDepartureYear.setOpaque(false);
        jSDepartureYear.setPreferredSize(new java.awt.Dimension(80, 33));

        jSReturnDay.setMinimumSize(new java.awt.Dimension(60, 33));
        jSReturnDay.setName(""); // NOI18N
        jSReturnDay.setPreferredSize(new java.awt.Dimension(60, 33));

        jSReturnMonth.setMinimumSize(new java.awt.Dimension(60, 33));
        jSReturnMonth.setName(""); // NOI18N
        jSReturnMonth.setPreferredSize(new java.awt.Dimension(60, 33));

        jSReturnYear.setMinimumSize(new java.awt.Dimension(80, 33));
        jSReturnYear.setName(""); // NOI18N
        jSReturnYear.setOpaque(false);
        jSReturnYear.setPreferredSize(new java.awt.Dimension(80, 33));

        jSReturnTime.setMinimumSize(new java.awt.Dimension(60, 33));
        jSReturnTime.setPreferredSize(new java.awt.Dimension(60, 33));

        jLHour.setText("Horas");

        jLMinutes.setText("Minutos");

        jSDepartureTime.setMinimumSize(new java.awt.Dimension(60, 33));
        jSDepartureTime.setPreferredSize(new java.awt.Dimension(60, 33));
        jSDepartureTime.setRequestFocusEnabled(false);

        jSDepartureMinute.setModel(new javax.swing.SpinnerNumberModel(0, 0, 55, 5));
        jSDepartureMinute.setMinimumSize(new java.awt.Dimension(60, 33));
        jSDepartureMinute.setPreferredSize(new java.awt.Dimension(60, 33));
        jSDepartureMinute.setRequestFocusEnabled(false);

        jLSubTitle2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLSubTitle2.setText("¿Como viajas?");

        jSeparator2.setForeground(new java.awt.Color(255, 51, 0));

        jSeparator3.setForeground(new java.awt.Color(255, 51, 0));

        jSeparator4.setForeground(new java.awt.Color(255, 51, 0));

        jLPassengers.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLPassengers.setText("Pasajeros");

        jLAdults.setText("Adultos");

        jLChildren.setText("Niños");

        jSAdults.setModel(new javax.swing.SpinnerNumberModel(1, 0, 10, 1));
        jSAdults.setMinimumSize(new java.awt.Dimension(60, 33));
        jSAdults.setPreferredSize(new java.awt.Dimension(60, 33));
        jSAdults.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSAdultsStateChanged(evt);
            }
        });

        jSChildren.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));
        jSChildren.setMinimumSize(new java.awt.Dimension(60, 33));
        jSChildren.setPreferredSize(new java.awt.Dimension(60, 33));
        jSChildren.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSChildrenStateChanged(evt);
            }
        });

        jSeparator5.setForeground(new java.awt.Color(255, 51, 0));

        jFTFTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("¤ #,##0"))));
        jFTFTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jFTFTotal.setText("$ 0");
        jFTFTotal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLPassengers1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLPassengers1.setText("TOTAL");

        jBPassengers.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jBPassengers.setText("Generar Ticket");
        jBPassengers.setEnabled(false);
        jBPassengers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPassengersActionPerformed(evt);
            }
        });

        jCBTo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jCBTo.setMaximumRowCount(6);
        jCBTo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cali", "Manizales", "Bogota" }));
        jCBTo.setMinimumSize(new java.awt.Dimension(125, 25));
        jCBTo.setPreferredSize(new java.awt.Dimension(125, 25));
        jCBTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBToActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout myPanelLayout = new javax.swing.GroupLayout(myPanel);
        myPanel.setLayout(myPanelLayout);
        myPanelLayout.setHorizontalGroup(
            myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator4)
            .addGroup(myPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(myPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLTo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCBTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(myPanelLayout.createSequentialGroup()
                        .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(myPanelLayout.createSequentialGroup()
                                .addComponent(jLType)
                                .addGap(43, 43, 43)
                                .addComponent(jRBRoundTrip)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRBOneWay))
                            .addComponent(jLSubTitle)
                            .addGroup(myPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCBFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLSubTitle2)
                            .addGroup(myPanelLayout.createSequentialGroup()
                                .addComponent(jLPassengers)
                                .addGap(57, 57, 57)
                                .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(myPanelLayout.createSequentialGroup()
                                        .addComponent(jSAdults, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSChildren, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(49, 49, 49)
                                        .addComponent(jFTFTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(myPanelLayout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(jLAdults)
                                        .addGap(33, 33, 33)
                                        .addComponent(jLChildren)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLPassengers1)
                                        .addGap(61, 61, 61))))
                            .addComponent(jLTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(28, 28, 28))
            .addGroup(myPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(myPanelLayout.createSequentialGroup()
                        .addComponent(jLDepartureDate)
                        .addGap(57, 57, 57)
                        .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(myPanelLayout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLDay)
                                .addGap(42, 42, 42)
                                .addComponent(jLMonth)
                                .addGap(56, 56, 56)
                                .addComponent(jLYear))
                            .addGroup(myPanelLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jSDepartureDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSDepartureMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSDepartureYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(myPanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jSDepartureTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(myPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLHour)
                                .addGap(30, 30, 30)))
                        .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSDepartureMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(myPanelLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLMinutes)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(myPanelLayout.createSequentialGroup()
                        .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(myPanelLayout.createSequentialGroup()
                                .addComponent(jLReturnDate)
                                .addGap(31, 31, 31)
                                .addComponent(jSReturnDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSReturnMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSReturnYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jSReturnTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSReturnMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLSubTitle1))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(myPanelLayout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(jBPassengers)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        myPanelLayout.setVerticalGroup(
            myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLType)
                    .addComponent(jRBRoundTrip)
                    .addComponent(jRBOneWay))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLSubTitle)
                .addGap(21, 21, 21)
                .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLFrom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCBFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCBTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLTo)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLSubTitle1)
                .addGap(7, 7, 7)
                .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLYear)
                    .addComponent(jLMonth)
                    .addComponent(jLDay)
                    .addComponent(jLHour)
                    .addComponent(jLMinutes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSDepartureYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLDepartureDate)
                    .addComponent(jSDepartureMonth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSDepartureDay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSDepartureTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSDepartureMinute, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLReturnDate)
                    .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSReturnYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSReturnMonth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSReturnDay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSReturnTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSReturnMinute, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLSubTitle2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLChildren)
                    .addComponent(jLAdults)
                    .addComponent(jLPassengers1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSAdults, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSChildren, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFTFTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLPassengers))
                .addGap(18, 18, 18)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBPassengers)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(myPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(myPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBPassengersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPassengersActionPerformed
        String[]listAdults ={"Cedula de ciudadania","Pasaporte","Cedula de extrangeria"};
        String[]listChildren = {"Tarjeta de identidad","Registro civil"};
        int numberAdults,numberChildren;
        int option = 0;
        boolean isAdult=true;
        numberAdults = (Integer)jSAdults.getValue();
        numberChildren = (Integer)jSChildren.getValue();
        JPanel myPanelPassengers;
        JTextField jTFName,jTFLastName,jTFContact,jTFEmail,jTFId,jTFGender;
        JComboBox jCBTypeId = new JComboBox(listAdults);
        myPanelPassengers = new JPanel(new GridLayout(7,2,1,1));
        for (int i=0;i<numberAdults;i++){
            myPanelPassengers.add(new JLabel("Nombre: "));
            myPanelPassengers.add(jTFName = new JTextField());
            myPanelPassengers.add(new JLabel("Apellido: "));
            myPanelPassengers.add(jTFLastName = new JTextField());
            myPanelPassengers.add(new JLabel("Contacto: "));
            myPanelPassengers.add(jTFContact = new JTextField());
            myPanelPassengers.add(new JLabel("E-mail: "));
            myPanelPassengers.add(jTFEmail = new JTextField());
            myPanelPassengers.add(new JLabel("Tipo de documento: "));
            myPanelPassengers.add(jCBTypeId);
            myPanelPassengers.add(new JLabel("Numero de documento: "));
            myPanelPassengers.add(jTFId = new JTextField());
            myPanelPassengers.add(new JLabel("Genero: "));
            myPanelPassengers.add(jTFGender = new JTextField());
            option = JOptionPane.showConfirmDialog(null,myPanelPassengers,"Formulario Adulto "+(i+1), JOptionPane.DEFAULT_OPTION);
            if(option == JOptionPane.OK_OPTION){
                if (controller.createPassenger(jTFName.getText(),jTFLastName.getText(),jTFContact.getText(),jTFEmail.getText(),jCBTypeId.getSelectedItem().toString(),jTFId.getText(),jTFGender.getText())){
                    JOptionPane.showMessageDialog(null,"Pasajero: "+jTFName.getText()+" "+jTFLastName.getText()+" registado correctamente");
                    if (controller.createTicket(isAdult,Integer.parseInt(bGType.getSelection().getActionCommand()),jCBFrom.getSelectedItem().toString(),jCBTo.getSelectedItem().toString(),Integer.parseInt(jSDepartureDay.getValue().toString()),Integer.parseInt(jSDepartureMonth.getValue().toString()),Integer.parseInt(jSDepartureYear.getValue().toString()),Integer.parseInt(jSDepartureTime.getValue().toString()),Integer.parseInt(jSDepartureMinute.getValue().toString()),Integer.parseInt(jSReturnDay.getValue().toString()),Integer.parseInt(jSReturnMonth.getValue().toString()),Integer.parseInt(jSReturnYear.getValue().toString()),Integer.parseInt(jSReturnTime.getValue().toString()),Integer.parseInt(jSReturnMinute.getValue().toString()))){
                        printTicket(Integer.parseInt(bGType.getSelection().getActionCommand()));
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"Error al registar pasajero intentento de nuevo");
                    i--;
                }
            }
            else{
                i--;
            }
            myPanelPassengers.removeAll();
        }
        jCBTypeId.removeAllItems();
        jCBTypeId.setModel(new DefaultComboBoxModel<>(listChildren));
        for (int i=0;i<numberChildren;i++){
            myPanelPassengers.add(new JLabel("Nombre: "));
            myPanelPassengers.add(jTFName = new JTextField());
            myPanelPassengers.add(new JLabel("Apellido: "));
            myPanelPassengers.add(jTFLastName = new JTextField());
            myPanelPassengers.add(new JLabel("Tipo de documento: "));
            myPanelPassengers.add(jCBTypeId);
            myPanelPassengers.add(new JLabel("Numero de documento: "));
            myPanelPassengers.add(jTFId = new JTextField());
            myPanelPassengers.add(new JLabel("Genero: "));
            myPanelPassengers.add(jTFGender = new JTextField());
            option = JOptionPane.showConfirmDialog(null,myPanelPassengers,"Formulario niño "+(i+1), JOptionPane.DEFAULT_OPTION);
            if(option == JOptionPane.OK_OPTION){
                if (controller.createPassenger(jTFName.getText(),jTFLastName.getText(),jCBTypeId.getSelectedItem().toString(),jTFId.getText(),jTFGender.getText())){
                    JOptionPane.showMessageDialog(null,"Pasajero: "+jTFName.getText()+" "+jTFLastName.getText()+" registado correctamente");
                    if (controller.createTicket(isAdult,Integer.parseInt(bGType.getSelection().getActionCommand()),jCBFrom.getSelectedItem().toString(),jCBTo.getSelectedItem().toString(),Integer.parseInt(jSDepartureDay.getValue().toString()),Integer.parseInt(jSDepartureMonth.getValue().toString()),Integer.parseInt(jSDepartureYear.getValue().toString()),Integer.parseInt(jSDepartureTime.getValue().toString()),Integer.parseInt(jSDepartureMinute.getValue().toString()),Integer.parseInt(jSReturnDay.getValue().toString()),Integer.parseInt(jSReturnMonth.getValue().toString()),Integer.parseInt(jSReturnYear.getValue().toString()),Integer.parseInt(jSReturnTime.getValue().toString()),Integer.parseInt(jSReturnMinute.getValue().toString()))){
                        printTicket(Integer.parseInt(bGType.getSelection().getActionCommand()));
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"Error al registar pasajero intentento de nuevo");
                    i--;
                }
            }
            else{
                i--;
            }
        myPanelPassengers.removeAll();    
        }    
    }//GEN-LAST:event_jBPassengersActionPerformed

    private void jSAdultsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSAdultsStateChanged
        if(!jCBFrom.getSelectedItem().equals(jCBTo.getSelectedItem())){
            double totalAmount = controller.getTotalAmount(Integer.parseInt(bGType.getSelection().getActionCommand()),jCBFrom.getSelectedItem().toString(),jCBTo.getSelectedItem().toString(),(Integer)jSAdults.getValue(),(Integer)jSChildren.getValue());
            jFTFTotal.setText("$ "+totalAmount);
            jBPassengers.setEnabled(true);
        }
        else{
            jBPassengers.setEnabled(false);
            jFTFTotal.setText("$ 0");
        }      
    }//GEN-LAST:event_jSAdultsStateChanged

    private void jSChildrenStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSChildrenStateChanged
        if(!jCBFrom.getSelectedItem().equals(jCBTo.getSelectedItem())){
            double totalAmount = controller.getTotalAmount(Integer.parseInt(bGType.getSelection().getActionCommand()),jCBFrom.getSelectedItem().toString(),jCBTo.getSelectedItem().toString(),(Integer)jSAdults.getValue(),(Integer)jSChildren.getValue());
            jFTFTotal.setText("$ "+totalAmount);
            jBPassengers.setEnabled(true);
        }
        else{
            jBPassengers.setEnabled(false);
            jFTFTotal.setText("$ 0");
        }
    }//GEN-LAST:event_jSChildrenStateChanged

    private void jCBFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBFromActionPerformed
        if(!jCBFrom.getSelectedItem().equals(jCBTo.getSelectedItem())){
            double totalAmount = controller.getTotalAmount(Integer.parseInt(bGType.getSelection().getActionCommand()),jCBFrom.getSelectedItem().toString(),jCBTo.getSelectedItem().toString(),(Integer)jSAdults.getValue(),(Integer)jSChildren.getValue());
            setCurrentDate();
            jFTFTotal.setText("$ "+totalAmount);
            jBPassengers.setEnabled(true);
        }
        else{
            jBPassengers.setEnabled(false);
            jFTFTotal.setText("$ 0");
        }        
    }//GEN-LAST:event_jCBFromActionPerformed

    private void jCBToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBToActionPerformed
        if(!jCBFrom.getSelectedItem().equals(jCBTo.getSelectedItem())){
            double totalAmount = controller.getTotalAmount(Integer.parseInt(bGType.getSelection().getActionCommand()),jCBFrom.getSelectedItem().toString(),jCBTo.getSelectedItem().toString(),(Integer)jSAdults.getValue(),(Integer)jSChildren.getValue());
            setCurrentDate();
            jFTFTotal.setText("$ "+totalAmount);
            jBPassengers.setEnabled(true);
        }
        else{
            jBPassengers.setEnabled(false);
            jFTFTotal.setText("$ 0");
        }        
    }//GEN-LAST:event_jCBToActionPerformed

    private void jRBRoundTripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBRoundTripActionPerformed
        jLReturnDate.setVisible(true);
        jSReturnDay.setVisible(true);
        jSReturnMonth.setVisible(true);
        jSReturnYear.setVisible(true);
        jSReturnTime.setVisible(true);
        jSReturnMinute.setVisible(true);
         if(!jCBFrom.getSelectedItem().equals(jCBTo.getSelectedItem())){
            double totalAmount = controller.getTotalAmount(Integer.parseInt(bGType.getSelection().getActionCommand()),jCBFrom.getSelectedItem().toString(),jCBTo.getSelectedItem().toString(),(Integer)jSAdults.getValue(),(Integer)jSChildren.getValue());
            setCurrentDate();
            jFTFTotal.setText("$ "+totalAmount);
            jBPassengers.setEnabled(true);
        }
        else{
            jBPassengers.setEnabled(false);
            jFTFTotal.setText("$ 0");
        }    
    }//GEN-LAST:event_jRBRoundTripActionPerformed

    private void jRBOneWayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBOneWayActionPerformed
        jLReturnDate.setVisible(false);
        jSReturnDay.setVisible(false);
        jSReturnMonth.setVisible(false);
        jSReturnYear.setVisible(false);
        jSReturnTime.setVisible(false);
        jSReturnMinute.setVisible(false);
         if(!jCBFrom.getSelectedItem().equals(jCBTo.getSelectedItem())){
            double totalAmount = controller.getTotalAmount(Integer.parseInt(bGType.getSelection().getActionCommand()),jCBFrom.getSelectedItem().toString(),jCBTo.getSelectedItem().toString(),(Integer)jSAdults.getValue(),(Integer)jSChildren.getValue());
            setCurrentDate();
            jFTFTotal.setText("$ "+totalAmount);
            jBPassengers.setEnabled(true);
        }
        else{
            jBPassengers.setEnabled(false);
            jFTFTotal.setText("$ 0");
        }
    }//GEN-LAST:event_jRBOneWayActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bGType;
    private javax.swing.JButton jBPassengers;
    private javax.swing.JComboBox<String> jCBFrom;
    private javax.swing.JComboBox<String> jCBTo;
    private javax.swing.JFormattedTextField jFTFTotal;
    private javax.swing.JLabel jLAdults;
    private javax.swing.JLabel jLChildren;
    private javax.swing.JLabel jLDay;
    private javax.swing.JLabel jLDepartureDate;
    private javax.swing.JLabel jLFrom;
    private javax.swing.JLabel jLHour;
    private javax.swing.JLabel jLMinutes;
    private javax.swing.JLabel jLMonth;
    private javax.swing.JLabel jLPassengers;
    private javax.swing.JLabel jLPassengers1;
    private javax.swing.JLabel jLReturnDate;
    private javax.swing.JLabel jLSubTitle;
    private javax.swing.JLabel jLSubTitle1;
    private javax.swing.JLabel jLSubTitle2;
    private javax.swing.JLabel jLTitle;
    private javax.swing.JLabel jLTo;
    private javax.swing.JLabel jLType;
    private javax.swing.JLabel jLYear;
    private javax.swing.JRadioButton jRBOneWay;
    private javax.swing.JRadioButton jRBRoundTrip;
    private javax.swing.JSpinner jSAdults;
    private javax.swing.JSpinner jSChildren;
    private javax.swing.JSpinner jSDepartureDay;
    private javax.swing.JSpinner jSDepartureMinute;
    private javax.swing.JSpinner jSDepartureMonth;
    private javax.swing.JSpinner jSDepartureTime;
    private javax.swing.JSpinner jSDepartureYear;
    private javax.swing.JSpinner jSReturnDay;
    private javax.swing.JSpinner jSReturnMinute;
    private javax.swing.JSpinner jSReturnMonth;
    private javax.swing.JSpinner jSReturnTime;
    private javax.swing.JSpinner jSReturnYear;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JPanel myPanel;
    // End of variables declaration//GEN-END:variables

    private void printTicket(int typeTicket) {
        String ticketInformation;
        ticketInformation = controller.getPrintedTicket(typeTicket);
        System.out.println(ticketInformation);
    }    
}
